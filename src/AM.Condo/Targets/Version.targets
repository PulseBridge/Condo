<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- detect branch strategy -->
  <PropertyGroup Condition=" '$(BranchStrategyTargets)' == '' ">
    <BranchStrategy  Condition=" '$(BranchStrategy)' == '' ">GitFlow</BranchStrategy>

    <BranchStrategyTargets>$(CondoTargetsPath)Version$(slash)$(BranchStrategy).targets</BranchStrategyTargets>
  </PropertyGroup>

  <!-- detect version strategy -->
  <PropertyGroup Condition=" '$(VersionStrategyTargets)' == '' ">
    <VersionStrategy Condition=" '$(VersionStrategy)' == '' ">Conventional</VersionStrategy>

    <VersionStrategyTargets>$(CondoTargetsPath)Version$(slash)$(VersionStrategy).targets</VersionStrategyTargets>
  </PropertyGroup>

  <PropertyGroup>
    <SetVersionVariables Condition=" $(SetVersionVariables) == '' ">$(SET_VERSION_VARIABLES)</SetVersionVariables>
    <SetVersionVariables Condition=" $(SetVersionVariables) == '' ">false</SetVersionVariables>
    <SetVersionVariables Condition=" '$(SetVersionVariables.ToLower())' != 'true' ">false</SetVersionVariables>
  </PropertyGroup>

  <!-- import the branch and version strategy -->
  <Import Project="$(BranchStrategyTargets)" Condition=" Exists('$(BranchStrategyTargets)') "/>
  <Import Project="$(VersionStrategyTargets)" Condition=" Exists('$(VersionStrategyTargets)') "/>

  <PropertyGroup>
    <BuildQuality  Condition=" '$(BuildQuality)' == '' ">$(CONDO_BUILD_QUALITY)</BuildQuality>
    <SuffixTag     Condition=" '$(SuffixTag)' == '' ">$(CONDO_SUFFIX_TAG)</SuffixTag>
    <CreateRelease Condition=" '$(CreateRelease)' == '' ">$(CONDO_CREATE_RELEASE)</CreateRelease>
    <CreateRelease Condition=" '$(BuildQuality)' != '' ">false</CreateRelease>
  </PropertyGroup>

  <!-- gets the build quality based on the current convention -->
  <Target Name="GetBuildQuality">
    <GetBuildQuality
        Branch="$(Branch)"
        CI="$(CI)"

        FeatureBranchPrefix="$(FeatureBranchPrefix)"
        BugfixBranchPrefix="$(BugfixBranchPrefix)"
        ReleaseBranchPrefix="$(ReleaseBranchPrefix)"
        SupportBranchPrefix="$(SupportBranchPrefix)"
        HotfixBranchPrefix="$(HotfixBranchPrefix)"

        NextReleaseBranch="$(NextReleaseBranch)"
        ProductionReleaseBranch="$(ProductionReleaseBranch)"

        DefaultBuildQuality="$(DefaultBuildQuality)"

        FeatureBranchBuildQuality="$(FeatureBranchBuildQuality)"
        BugfixBranchBuildQuality="$(BugfixBranchBuildQuality)"
        ReleaseBranchBuildQuality="$(ReleaseBranchBuildQuality)"
        SupportBranchBuildQuality="$(SupportBranchBuildQuality)"
        HotfixBranchBuildQuality="$(HotfixBranchBuildQuality)"
        NextReleaseBranchBuildQuality="$(NextReleaseBranchBuildQuality)"
        ProductionReleaseBranchBuildQuality="$(ProductionReleaseBranchBuildQuality)">
      <Output TaskParameter="BuildQuality" PropertyName="BuildQuality" Condition=" '$(BuildQuality)' == '' " />
      <Output TaskParameter="CreateRelease" PropertyName="CreateRelease" Condition=" '$(CreateRelease)' == '' " />
    </GetBuildQuality>
  </Target>

  <!-- get assembly info based on the repository -->
  <Target Name="GetAssemblyInfo">
    <GetAssemblyInfo
        CI="$(CI)"
        RecommendedRelease="$(RecommendedRelease)"
        AssemblyVersion="$(AssemblyVersion)"
        BuildId="$(BuildId)"
        CommitId="$(CommitId)"
        BuildQuality="$(BuildQuality)"
        SuffixTag="$(SuffixTag)"
        StartDateUtc="$(StartDateUtc)"
        BuildDateUtc="$(BuildDateUtc)">
      <Output TaskParameter="AssemblyVersion" PropertyName="AssemblyVersion" />
      <Output TaskParameter="FileVersion" PropertyName="FileVersion" />
      <Output TaskParameter="InformationalVersion" PropertyName="InformationalVersion" />
      <Output TaskParameter="BuildId" PropertyName="BuildId" />
      <Output TaskParameter="CommitId" PropertyName="CommitId" />
      <Output TaskParameter="BuildDateUtc" PropertyName="BuildDateUtc" />
      <Output TaskParameter="PreReleaseTag" PropertyName="PreReleaseTag" />
      <Output TaskParameter="MajorVersion" PropertyName="MajorVersion" />
    </GetAssemblyInfo>
  </Target>

  <!-- save assembly info files -->
  <Target Name="SaveAssemblyInfo" Condition=" $(DotNetBuild) ">
    <SaveAssemblyInfo
        AssemblyInfoPath="%(SourceProjects.CondoAssemblyInfo)"
        RecommendedRelease="$(RecommendedRelease)"
        Company="$(Company)"
        Product="$(Product)"
        ProjectName="%(SourceProjects.ProjectName)"
        Copyright="$(Copyright)"
        AssemblyVersion="$(AssemblyVersion)"
        FileVersion="$(FileVersion)"
        InformationalVersion="$(InformationalVersion)"
        Configuration="$(Configuration)"
        BuildDateUtc="$(BuildDateUtc)"
        Platform="$(Platform)"
        Authors="$(Authors)"
        Branch="$(Branch)"
        BuildQuality="$(BuildQuality)"
        BuildId="$(BuildId)"
        CommitId="$(CommitId)"
        PullRequestId="$(PullRequestId)"
        BuildOn="$(BuildOn)"
        BuildFor="$(BuildFor)"
        BuildName="$(BuildName)"
        TeamUri="$(TeamUri)"
        RepositoryUri="$(RepositoryUri)"
        BuildUri="$(BuildUri)"
        License="$(License)"
        LicenseUri="$(LicenseUri)" />
  </Target>

  <Target Name="PrintVersionInfo">
    <Message Importance="High" Text="Build Version      : $(InformationalVersion)" />
    <Message Importance="High" Text="Current Version    : $(CurrentVersion)" Condition=" '$(CurrentVersion)' != '' " />
    <Message Importance="High" Text="Current Release    : $(CurrentRelease)" />
    <Message Importance="High" Text="Recommended Release: $(RecommendedRelease)" Condition=" '$(RecommendedRelease)' != '' "/>
    <Message Importance="High" Text="Next Release       : $(NextRelease)" Condition=" '$(NextRelease)' != '' " />
    <Message Importance="High" Text="File Version       : $(FileVersion)" />
    <Message Importance="High" Text="Build Quality      : $(BuildQuality)" />
    <Message Importance="High" Text="Pre-Release Tag    : $(PreReleaseTag)" />
    <Message Importance="High" Text="Suffix Tag         : $(SuffixTag)" />
    <Message Importance="High" Text="Major Version      : $(MajorVersion)" />
    <Message Importance="High" Text="Create Release     : $(CreateRelease)" />

    <Message Importance="High"
             Text="##vso[build.updatebuildnumber]$(InformationalVersion)"
             Condition=" '$(BuildHost)' == 'VSTS' AND '$(AccessToken)' != '' " />
  </Target>

  <Target Name="SetVersionVariables" Condition=" $(SetVersionVariables) ">
    <SetEnvironmentVariable Name="InformationalVersion" Value="$(InformationalVersion)" />
    <SetEnvironmentVariable Name="CurrentVersion"       Value="$(CurrentVersion)" />
    <SetEnvironmentVariable Name="CurrentRelease"       Value="$(CurrentRelease)" />
    <SetEnvironmentVariable Name="RecommendedRelease"   Value="$(RecommendedRelease)" />
    <SetEnvironmentVariable Name="NextRelease"          Value="$(NextRelease)" />

    <SetEnvironmentVariable Name="BuildQuality"         Value="$(BuildQuality)" />
    <SetEnvironmentVariable Name="PreReleaseTag"        Value="$(PreReleaseTag)" />
    <SetEnvironmentVariable Name="CurrentRelease"       Value="$(CurrentRelease)" />
    <SetEnvironmentVariable Name="MajorVersion"         Value="$(MajorVersion)" />
  </Target>

  <PropertyGroup>
    <BeforeVersion>
      GetBuildQuality;
      $(BeforeVersion);
    </BeforeVersion>

    <AfterVersion>
      PrintVersionInfo;
      SetVersionVariables;
      $(AfterVersion);
    </AfterVersion>

    <VersionDependsOn>
      $(BeforeVersion);
      $(VersionDependsOn);
      $(AfterVersion);
    </VersionDependsOn>
  </PropertyGroup>

  <!-- process the versioning -->
  <Target Name="Versioning" DependsOnTargets="$(VersionDependsOn)" BeforeTargets="Version" />
</Project>
