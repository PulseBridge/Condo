@{/*

update-self
  Updates the build scripts located at the root of the project structure.

base_path='$(CurrentDirectory)'
  The path in which to locate the build scripts for updating.

*/}

use namespace = 'System.Net'

default base_path               = '${ Directory.GetCurrentDirectory() }'

var update_self_base_uri        = 'https://raw.githubusercontent.com/pulsebridge/condo/develop/src/template/'

var update_buildcmd_path        = '${ Path.Combine(base_path, "condo.cmd") }'
var update_buildps1_path        = '${ Path.Combine(base_path, "condo.ps1") }'
var update_buildsh_path         = '${ Path.Combine(base_path, "condo.sh") }'
var update_msbuild_path         = '${ Path.Combine(base_path, "condo.msbuild") }'

var update_buildtmp_path        = '${ Path.Combine(base_path, "condo.tmp") }'

var update_package_path         = '${ Path.Combine(base_path, "packages") }'
var update_sake_path            = '${ Path.Combine(update_package_path, "Sake") }'
var update_condo_path           = '${ Path.Combine(update_package_path, "PulseBridge.Condo") }'

var update_buildcmd_uri         = '${ update_self_base_uri + "condo.cmd" }'
var update_buildps1_uri         = '${ update_self_base_uri + "condo.ps1" }'
var update_buildsh_uri          = '${ update_self_base_uri + "condo.sh" }'
var update_msbuild_uri          = '${ update_self_base_uri + "condo.msbuild" }'

@{
    Build.Log.Header("update-self");
    Build.Log.Argument("condo cmd path", update_buildcmd_path);
    Build.Log.Argument("condo ps1 path", update_buildps1_path);
    Build.Log.Argument("condo sh path", update_buildsh_path);
    Build.Log.Header();

    using(var client = new WebClient())
    {
        if (File.Exists(update_buildcmd_path))
        {
            Log.Verbose("update-self: updating condo.cmd from " + update_buildcmd_uri);

            try
            {
                client.DownloadFile(update_buildcmd_uri, update_buildtmp_path);
                File.Replace(update_buildtmp_path, update_buildcmd_path, null, true);
            }
            catch
            {
                Log.Warn("update-self: could not download condo.cmd. Please try again later.");
            }
        }

        if (File.Exists(update_buildps1_path))
        {
            Log.Verbose("update-self: updating condo.ps1 from " + update_buildps1_uri);

            try
            {
                client.DownloadFile(update_buildps1_uri, update_buildtmp_path);
                File.Replace(update_buildtmp_path, update_buildps1_path, null, true);
            }
            catch
            {
                Log.Warn("update-self: could not download condo.ps1. Please try again later.");
            }
        }

        if (File.Exists(update_buildsh_path))
        {
            Log.Verbose("update-self: updating condo.sh from " + update_buildsh_uri);

            try
            {
                client.DownloadFile(update_buildsh_uri, update_buildtmp_path);
                File.Replace(update_buildtmp_path, update_buildsh_path, null, true);
            }
            catch
            {
                Log.Warn("update-self: could not download condo.sh. Please try again later.");
            }
        }

        if (File.Exists(update_msbuild_path))
        {
            Log.Verbose("update-self: updating condo.msbuild from " + update_msbuild_uri);

            try
            {
                client.DownloadFile(update_msbuild_uri, update_buildtmp_path);
                File.Replace(update_buildtmp_path, update_msbuild_path, null, true);
            }
            catch
            {
                Log.Warn("update-self: could not download condo.msbuild. Please try again later.");
            }
        }
        if (File.Exists(update_buildtmp_path))
        {
            Log.Info("update-self: removing temporary file - " + update_buildtmp_path);
            File.Delete(update_buildtmp_path);
        }
    }
}

log log_line='-'

exec exec_cmd='chmod' exec_args='ugo+x "${ update_buildsh_path }"' exec_path='${ base_path }' exec_wait='${ true }' exec_quiet='${ true }' if='Build.Unix && File.Exists(update_buildsh_path)'

-Build.RemoveDirectory(update_condo_path);
-Build.RemoveDirectory(update_sake_path);