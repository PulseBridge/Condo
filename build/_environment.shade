@{/*

environment
    prints details about the current environment in which condo is currently executing.

*/}

use namespace = 'System'
use import = 'Condo.Build'

@{
    Build.Log.Header("environment");

    var env_os_name = "Windows";

    if (Build.OSX)
    {
        env_os_name = "Apple OSX";
    }

    else if (Build.Unix)
    {
        env_os_name = "Linux or Unix";
    }

    Build.Log.Argument("machine", Environment.MachineName);
    Build.Log.Argument("os", env_os_name);
    Build.Log.Argument("version", Environment.OSVersion.VersionString);
    Build.Log.Argument("system path", Environment.SystemDirectory);
    Build.Log.Argument("current path", Environment.CurrentDirectory);
    Build.Log.Argument("domain", Environment.UserDomainName);
    Build.Log.Argument("user", Environment.UserName);
    Build.Log.Argument("clr", Environment.Version);
    Build.Log.Argument("processors", Environment.ProcessorCount);
    Build.Log.Argument("architecture", Environment.Is64BitOperatingSystem ? "64-bit" : "32-bit");
    Build.Log.Header();

    Build.Log.Header("variables");

    foreach (DictionaryEntry env_variable in Environment.GetEnvironmentVariables())
    {
        Build.Log.Argument(env_variable.Key.ToString(), env_variable.Value.ToString(), true);
    }
}