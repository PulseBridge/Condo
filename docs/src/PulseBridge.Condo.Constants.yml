items:
- uid: PulseBridge.Condo.Constants
  commentId: T:PulseBridge.Condo.Constants
  id: Constants
  parent: PulseBridge.Condo
  children:
  - PulseBridge.Condo.Constants.Agent
  - PulseBridge.Condo.Constants.Architecture
  - PulseBridge.Condo.Constants.Category
  - PulseBridge.Condo.Constants.FactType
  - PulseBridge.Condo.Constants.Platform
  - PulseBridge.Condo.Constants.Priority
  langs:
  - csharp
  - vb
  name: Constants
  fullName: PulseBridge.Condo.Constants
  type: Class
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/Constants.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Constants
    path: src/PulseBridge.Condo.Extensions/Constants.cs
    startLine: 5
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nRepresents a set of constants used for xunit traits.\n"
  example: []
  syntax:
    content: public class Constants
    content.vb: Public Class Constants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PulseBridge.Condo.Constants.Category
  commentId: F:PulseBridge.Condo.Constants.Category
  id: Category
  parent: PulseBridge.Condo.Constants
  langs:
  - csharp
  - vb
  name: Category
  fullName: PulseBridge.Condo.Constants.Category
  type: Field
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/Constants.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Category
    path: src/PulseBridge.Condo.Extensions/Constants.cs
    startLine: 10
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nGets the name representing the key for a category trait.\n"
  example: []
  syntax:
    content: public const string Category = "Category"
    content.vb: Public Const Category As String = "Category"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PulseBridge.Condo.Constants.Platform
  commentId: F:PulseBridge.Condo.Constants.Platform
  id: Platform
  parent: PulseBridge.Condo.Constants
  langs:
  - csharp
  - vb
  name: Platform
  fullName: PulseBridge.Condo.Constants.Platform
  type: Field
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/Constants.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Platform
    path: src/PulseBridge.Condo.Extensions/Constants.cs
    startLine: 15
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nGets the name representing the key for a platform trait.\n"
  example: []
  syntax:
    content: public const string Platform = "Platform"
    content.vb: Public Const Platform As String = "Platform"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PulseBridge.Condo.Constants.Priority
  commentId: F:PulseBridge.Condo.Constants.Priority
  id: Priority
  parent: PulseBridge.Condo.Constants
  langs:
  - csharp
  - vb
  name: Priority
  fullName: PulseBridge.Condo.Constants.Priority
  type: Field
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/Constants.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Priority
    path: src/PulseBridge.Condo.Extensions/Constants.cs
    startLine: 20
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nGets the name representing the key for a priority trait.\n"
  example: []
  syntax:
    content: public const string Priority = "Priority"
    content.vb: Public Const Priority As String = "Priority"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PulseBridge.Condo.Constants.Architecture
  commentId: F:PulseBridge.Condo.Constants.Architecture
  id: Architecture
  parent: PulseBridge.Condo.Constants
  langs:
  - csharp
  - vb
  name: Architecture
  fullName: PulseBridge.Condo.Constants.Architecture
  type: Field
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/Constants.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Architecture
    path: src/PulseBridge.Condo.Extensions/Constants.cs
    startLine: 25
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nGets the name representing the key for an architecture trait.\n"
  example: []
  syntax:
    content: public const string Architecture = "Architecture"
    content.vb: Public Const Architecture As String = "Architecture"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PulseBridge.Condo.Constants.FactType
  commentId: F:PulseBridge.Condo.Constants.FactType
  id: FactType
  parent: PulseBridge.Condo.Constants
  langs:
  - csharp
  - vb
  name: FactType
  fullName: PulseBridge.Condo.Constants.FactType
  type: Field
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/Constants.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: FactType
    path: src/PulseBridge.Condo.Extensions/Constants.cs
    startLine: 30
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nGets the name representing the key for a fact type trait.\n"
  example: []
  syntax:
    content: public const string FactType = "Type"
    content.vb: Public Const FactType As String = "Type"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: PulseBridge.Condo.Constants.Agent
  commentId: F:PulseBridge.Condo.Constants.Agent
  id: Agent
  parent: PulseBridge.Condo.Constants
  langs:
  - csharp
  - vb
  name: Agent
  fullName: PulseBridge.Condo.Constants.Agent
  type: Field
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/Constants.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Agent
    path: src/PulseBridge.Condo.Extensions/Constants.cs
    startLine: 35
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nGets the name representing the key for an agent type trait.\n"
  example: []
  syntax:
    content: public const string Agent = "Agent"
    content.vb: Public Const Agent As String = "Agent"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: PulseBridge.Condo
  isExternal: false
  name: PulseBridge.Condo
  fullName: PulseBridge.Condo
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
