items:
- uid: PulseBridge.Condo.AgentDiscoverer
  commentId: T:PulseBridge.Condo.AgentDiscoverer
  id: AgentDiscoverer
  parent: PulseBridge.Condo
  children:
  - PulseBridge.Condo.AgentDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
  langs:
  - csharp
  - vb
  name: AgentDiscoverer
  fullName: PulseBridge.Condo.AgentDiscoverer
  type: Class
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/AgentDiscoverer.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: AgentDiscoverer
    path: src/PulseBridge.Condo.Extensions/AgentDiscoverer.cs
    startLine: 11
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nRepresents a trait discoverer that is used to discover traits based on the type of agent.\n"
  example: []
  syntax:
    content: 'public class AgentDiscoverer : ITraitDiscoverer'
    content.vb: >-
      Public Class AgentDiscoverer
          Implements ITraitDiscoverer
  inheritance:
  - System.Object
  implements:
  - Xunit.Sdk.ITraitDiscoverer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PulseBridge.Condo.AgentDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
  commentId: M:PulseBridge.Condo.AgentDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
  id: GetTraits(Xunit.Abstractions.IAttributeInfo)
  parent: PulseBridge.Condo.AgentDiscoverer
  langs:
  - csharp
  - vb
  name: GetTraits(IAttributeInfo)
  fullName: PulseBridge.Condo.AgentDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
  type: Method
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/AgentDiscoverer.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: GetTraits
    path: src/PulseBridge.Condo.Extensions/AgentDiscoverer.cs
    startLine: 23
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo
  summary: "\nGets the traits used to isolate tests based on the specified <em>traitAttribute</em>.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, string>> GetTraits(IAttributeInfo traitAttribute)
    content.vb: Public Function GetTraits(traitAttribute As IAttributeInfo) As IEnumerable(Of KeyValuePair(Of String, String))
    parameters:
    - id: traitAttribute
      type: Xunit.Abstractions.IAttributeInfo
      description: "\nThe attribute used to isolate tests.\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "\nThe collection of traits used to isolate tests based on the specified\n<em>traitAttribute</em>.\n"
  implements:
  - Xunit.Sdk.ITraitDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PulseBridge.Condo
  isExternal: false
  name: PulseBridge.Condo
  fullName: PulseBridge.Condo
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Xunit.Sdk.ITraitDiscoverer
  parent: Xunit.Sdk
  isExternal: true
  name: ITraitDiscoverer
  fullName: Xunit.Sdk.ITraitDiscoverer
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Xunit.Sdk
  isExternal: false
  name: Xunit.Sdk
  fullName: Xunit.Sdk
- uid: Xunit.Sdk.ITraitDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
  parent: Xunit.Sdk.ITraitDiscoverer
  isExternal: true
  name: GetTraits(IAttributeInfo)
  fullName: Xunit.Sdk.ITraitDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
  spec.csharp:
  - uid: Xunit.Sdk.ITraitDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
    name: GetTraits
    fullName: Xunit.Sdk.ITraitDiscoverer.GetTraits
    isExternal: true
  - name: (
    fullName: (
  - uid: Xunit.Abstractions.IAttributeInfo
    name: IAttributeInfo
    fullName: Xunit.Abstractions.IAttributeInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Xunit.Sdk.ITraitDiscoverer.GetTraits(Xunit.Abstractions.IAttributeInfo)
    name: GetTraits
    fullName: Xunit.Sdk.ITraitDiscoverer.GetTraits
    isExternal: true
  - name: (
    fullName: (
  - uid: Xunit.Abstractions.IAttributeInfo
    name: IAttributeInfo
    fullName: Xunit.Abstractions.IAttributeInfo
    isExternal: true
  - name: )
    fullName: )
- uid: Xunit.Abstractions.IAttributeInfo
  parent: Xunit.Abstractions
  isExternal: true
  name: IAttributeInfo
  fullName: Xunit.Abstractions.IAttributeInfo
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Xunit.Abstractions
  isExternal: false
  name: Xunit.Abstractions
  fullName: Xunit.Abstractions
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
