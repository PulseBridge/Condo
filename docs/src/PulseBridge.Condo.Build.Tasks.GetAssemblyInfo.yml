items:
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  commentId: T:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  id: GetAssemblyInfo
  parent: PulseBridge.Condo.Build.Tasks
  children:
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.AssemblyVersion
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Branch
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildDateUtc
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildId
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildQuality
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CI
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CommitId
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Execute
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.FileVersion
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.InformationalVersion
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.PreReleaseTag
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.SemanticVersion
  - PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.StartDateUtc
  langs:
  - csharp
  - vb
  name: GetAssemblyInfo
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  type: Class
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: GetAssemblyInfo
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 13
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nRepresents a Microsoft Build task that accumulates assembly information.\n"
  example: []
  syntax:
    content: 'public class GetAssemblyInfo : Task, ITask'
    content.vb: >-
      Public Class GetAssemblyInfo
          Inherits Task
          Implements ITask
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  implements:
  - Microsoft.Build.Framework.ITask
  inheritedMembers:
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.Log
  - Microsoft.Build.Utilities.Task.TaskResources
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.SemanticVersion
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.SemanticVersion
  id: SemanticVersion
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: SemanticVersion
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.SemanticVersion
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: SemanticVersion
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 19
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the semantic version of the product.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public string SemanticVersion { get; set; }
    content.vb: >-
      <Required>

      Public Property SemanticVersion As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.RequiredAttribute
    ctor: Microsoft.Build.Framework.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.StartDateUtc
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.StartDateUtc
  id: StartDateUtc
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: StartDateUtc
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.StartDateUtc
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: StartDateUtc
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 25
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the date and time (UTC) that the project was first started.\n"
  example: []
  syntax:
    content: >-
      [Required]

      public string StartDateUtc { get; set; }
    content.vb: >-
      <Required>

      Public Property StartDateUtc As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.RequiredAttribute
    ctor: Microsoft.Build.Framework.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Branch
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Branch
  id: Branch
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: Branch
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Branch
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Branch
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 31
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the branch used to determine the pre-release tag.\n"
  example: []
  syntax:
    content: public string Branch { get; set; }
    content.vb: Public Property Branch As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CI
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CI
  id: CI
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: CI
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CI
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: CI
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 36
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets a value indicating whether or not the build is a CI build.\n"
  example: []
  syntax:
    content: public bool CI { get; set; }
    content.vb: Public Property CI As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.PreReleaseTag
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.PreReleaseTag
  id: PreReleaseTag
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: PreReleaseTag
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.PreReleaseTag
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: PreReleaseTag
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 41
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets the pre-release tag (semantic version suffix) used by dotnet projects.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string PreReleaseTag { get; }
    content.vb: >-
      <Output>

      Public ReadOnly Property PreReleaseTag As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.AssemblyVersion
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.AssemblyVersion
  id: AssemblyVersion
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: AssemblyVersion
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.AssemblyVersion
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: AssemblyVersion
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 47
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the assembly version.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string AssemblyVersion { get; }
    content.vb: >-
      <Output>

      Public ReadOnly Property AssemblyVersion As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.FileVersion
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.FileVersion
  id: FileVersion
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: FileVersion
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.FileVersion
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: FileVersion
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 53
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the file version.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string FileVersion { get; }
    content.vb: >-
      <Output>

      Public ReadOnly Property FileVersion As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildQuality
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildQuality
  id: BuildQuality
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: BuildQuality
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildQuality
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: BuildQuality
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 59
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the pre-release tag.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string BuildQuality { get; set; }
    content.vb: >-
      <Output>

      Public Property BuildQuality As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.InformationalVersion
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.InformationalVersion
  id: InformationalVersion
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: InformationalVersion
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.InformationalVersion
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: InformationalVersion
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 65
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the informational version.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string InformationalVersion { get; }
    content.vb: >-
      <Output>

      Public ReadOnly Property InformationalVersion As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildId
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildId
  id: BuildId
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: BuildId
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildId
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: BuildId
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 71
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the build ID used to determine the version.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string BuildId { get; set; }
    content.vb: >-
      <Output>

      Public Property BuildId As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CommitId
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CommitId
  id: CommitId
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: CommitId
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.CommitId
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: CommitId
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 77
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nGets or sets the commit ID used to determine the version.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string CommitId { get; set; }
    content.vb: >-
      <Output>

      Public Property CommitId As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildDateUtc
  commentId: P:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildDateUtc
  id: BuildDateUtc
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: BuildDateUtc
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.BuildDateUtc
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: BuildDateUtc
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 83
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nSets the date and time used to determine the version.\n"
  example: []
  syntax:
    content: >-
      [Output]

      public string BuildDateUtc { get; set; }
    content.vb: >-
      <Output>

      Public Property BuildDateUtc As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: Microsoft.Build.Framework.OutputAttribute
    ctor: Microsoft.Build.Framework.OutputAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Execute
  commentId: M:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Execute
  id: Execute
  parent: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo
  langs:
  - csharp
  - vb
  name: Execute()
  fullName: PulseBridge.Condo.Build.Tasks.GetAssemblyInfo.Execute()
  type: Method
  source:
    remote:
      path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Execute
    path: src/PulseBridge.Condo.Build/Tasks/GetAssemblyInfo.cs
    startLine: 94
  assemblies:
  - PulseBridge.Condo.Build
  packages:
  - PulseBridge.Condo.Build(2.0.0)
  namespace: PulseBridge.Condo.Build.Tasks
  summary: "\nExecutes the <see cref=\"T:PulseBridge.Condo.Build.Tasks.GetAssemblyInfo\"></see> task.\n"
  example: []
  syntax:
    content: public override bool Execute()
    content.vb: Public Overrides Function Execute As Boolean
    return:
      type: System.Boolean
      description: "\nA value indicating whether or not the task executed successfully.\n"
  overridden: Microsoft.Build.Utilities.Task.Execute
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: PulseBridge.Condo.Build.Tasks
  isExternal: false
  name: PulseBridge.Condo.Build.Tasks
  fullName: PulseBridge.Condo.Build.Tasks
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Build.Utilities.Task
  parent: Microsoft.Build.Utilities
  isExternal: true
  name: Task
  fullName: Microsoft.Build.Utilities.Task
- uid: Microsoft.Build.Framework.ITask
  parent: Microsoft.Build.Framework
  isExternal: true
  name: ITask
  fullName: Microsoft.Build.Framework.ITask
- uid: Microsoft.Build.Utilities.Task.BuildEngine
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine
  fullName: Microsoft.Build.Utilities.Task.BuildEngine
- uid: Microsoft.Build.Utilities.Task.BuildEngine2
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine2
  fullName: Microsoft.Build.Utilities.Task.BuildEngine2
- uid: Microsoft.Build.Utilities.Task.BuildEngine3
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine3
  fullName: Microsoft.Build.Utilities.Task.BuildEngine3
- uid: Microsoft.Build.Utilities.Task.BuildEngine4
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: BuildEngine4
  fullName: Microsoft.Build.Utilities.Task.BuildEngine4
- uid: Microsoft.Build.Utilities.Task.HostObject
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: HostObject
  fullName: Microsoft.Build.Utilities.Task.HostObject
- uid: Microsoft.Build.Utilities.Task.Log
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: Log
  fullName: Microsoft.Build.Utilities.Task.Log
- uid: Microsoft.Build.Utilities.Task.TaskResources
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: TaskResources
  fullName: Microsoft.Build.Utilities.Task.TaskResources
- uid: Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: HelpKeywordPrefix
  fullName: Microsoft.Build.Utilities.Task.HelpKeywordPrefix
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Build.Utilities
  isExternal: false
  name: Microsoft.Build.Utilities
  fullName: Microsoft.Build.Utilities
- uid: Microsoft.Build.Framework
  isExternal: false
  name: Microsoft.Build.Framework
  fullName: Microsoft.Build.Framework
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Utilities.Task.Execute
  parent: Microsoft.Build.Utilities.Task
  isExternal: true
  name: Execute()
  fullName: Microsoft.Build.Utilities.Task.Execute()
  spec.csharp:
  - uid: Microsoft.Build.Utilities.Task.Execute
    name: Execute
    fullName: Microsoft.Build.Utilities.Task.Execute
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Build.Utilities.Task.Execute
    name: Execute
    fullName: Microsoft.Build.Utilities.Task.Execute
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
