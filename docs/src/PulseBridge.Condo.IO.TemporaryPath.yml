items:
- uid: PulseBridge.Condo.IO.TemporaryPath
  commentId: T:PulseBridge.Condo.IO.TemporaryPath
  id: TemporaryPath
  parent: PulseBridge.Condo.IO
  children:
  - PulseBridge.Condo.IO.TemporaryPath.#ctor
  - PulseBridge.Condo.IO.TemporaryPath.#ctor(System.String)
  - PulseBridge.Condo.IO.TemporaryPath.Combine(System.String)
  - PulseBridge.Condo.IO.TemporaryPath.Dispose
  - PulseBridge.Condo.IO.TemporaryPath.Dispose(System.Boolean)
  - PulseBridge.Condo.IO.TemporaryPath.Finalize
  - PulseBridge.Condo.IO.TemporaryPath.FullPath
  langs:
  - csharp
  - vb
  name: TemporaryPath
  fullName: PulseBridge.Condo.IO.TemporaryPath
  type: Class
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: TemporaryPath
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 10
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nRepresents a temporary path used for testing purposes.\n"
  example: []
  syntax:
    content: 'public class TemporaryPath : IDisposable'
    content.vb: >-
      Public Class TemporaryPath
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PulseBridge.Condo.IO.TemporaryPath.#ctor
  commentId: M:PulseBridge.Condo.IO.TemporaryPath.#ctor
  id: '#ctor'
  parent: PulseBridge.Condo.IO.TemporaryPath
  langs:
  - csharp
  - vb
  name: TemporaryPath()
  fullName: PulseBridge.Condo.IO.TemporaryPath.TemporaryPath()
  type: Constructor
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: .ctor
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 20
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nInitializes a new instance of the <see cref=\"T:PulseBridge.Condo.IO.TemporaryPath\"></see> class.\n"
  example: []
  syntax:
    content: public TemporaryPath()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.IO.TemporaryPath.#ctor(System.String)
  commentId: M:PulseBridge.Condo.IO.TemporaryPath.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: PulseBridge.Condo.IO.TemporaryPath
  langs:
  - csharp
  - vb
  name: TemporaryPath(String)
  fullName: PulseBridge.Condo.IO.TemporaryPath.TemporaryPath(System.String)
  type: Constructor
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: .ctor
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 31
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nInitializes a new instance of the <see cref=\"T:PulseBridge.Condo.IO.TemporaryPath\"></see> class.\n"
  example: []
  syntax:
    content: public TemporaryPath(string prefix)
    content.vb: Public Sub New(prefix As String)
    parameters:
    - id: prefix
      type: System.String
      description: "\nThe prefix of the temporary path.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.IO.TemporaryPath.Finalize
  commentId: M:PulseBridge.Condo.IO.TemporaryPath.Finalize
  id: Finalize
  parent: PulseBridge.Condo.IO.TemporaryPath
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: PulseBridge.Condo.IO.TemporaryPath.Finalize()
  type: Method
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Finalize
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 50
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nFinalizes an instance of the <see cref=\"T:PulseBridge.Condo.IO.TemporaryPath\"></see> class.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: PulseBridge.Condo.IO.TemporaryPath.FullPath
  commentId: P:PulseBridge.Condo.IO.TemporaryPath.FullPath
  id: FullPath
  parent: PulseBridge.Condo.IO.TemporaryPath
  langs:
  - csharp
  - vb
  name: FullPath
  fullName: PulseBridge.Condo.IO.TemporaryPath.FullPath
  type: Property
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: FullPath
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 60
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nGets the full path of the temporary path.\n"
  example: []
  syntax:
    content: public string FullPath { get; }
    content.vb: Public ReadOnly Property FullPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PulseBridge.Condo.IO.TemporaryPath.Combine(System.String)
  commentId: M:PulseBridge.Condo.IO.TemporaryPath.Combine(System.String)
  id: Combine(System.String)
  parent: PulseBridge.Condo.IO.TemporaryPath
  langs:
  - csharp
  - vb
  name: Combine(String)
  fullName: PulseBridge.Condo.IO.TemporaryPath.Combine(System.String)
  type: Method
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Combine
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 73
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nCombines the current temporary path with the specified <em>path</em>.\n"
  example: []
  syntax:
    content: public string Combine(string path)
    content.vb: Public Function Combine(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: "\nThe path that should be combined with the current temporary path.\n"
    return:
      type: System.String
      description: "\nThe specified <em>path</em> combined with the current temporary path.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.IO.TemporaryPath.Dispose
  commentId: M:PulseBridge.Condo.IO.TemporaryPath.Dispose
  id: Dispose
  parent: PulseBridge.Condo.IO.TemporaryPath
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: PulseBridge.Condo.IO.TemporaryPath.Dispose()
  type: Method
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Dispose
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 81
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PulseBridge.Condo.IO.TemporaryPath.Dispose(System.Boolean)
  commentId: M:PulseBridge.Condo.IO.TemporaryPath.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: PulseBridge.Condo.IO.TemporaryPath
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: PulseBridge.Condo.IO.TemporaryPath.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
      branch: feature/docfx
      repo: https://github.com/pulsebridge/condo
    id: Dispose
    path: src/PulseBridge.Condo.Extensions/IO/TemporaryPath.cs
    startLine: 93
  assemblies:
  - PulseBridge.Condo.Extensions
  packages:
  - PulseBridge.Condo.Extensions(2.0.0)
  namespace: PulseBridge.Condo.IO
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: protected void Dispose(bool disposing)
    content.vb: Protected Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\nA value indicating whether or not dispose was called manually.\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: PulseBridge.Condo.IO
  isExternal: false
  name: PulseBridge.Condo.IO
  fullName: PulseBridge.Condo.IO
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
